<?xml version="1.0" ?>
<project name="nutilities" default="build">
    <!-- set build.date property to current date in format yyyy-MM-dd -->
    <tstamp property="build.date" pattern="yyyy-MM-dd" />
    <!-- global project settings -->
    <property name="project.name" value="nutilities" />
    <property name="project.version" value="0.1" unless="${property::exists('project.version')}" />
    <property name="project.release.type" value="dev" unless="${property::exists('project.release.type')}" /> <!-- nightly / dev / alpha / beta# / rc# / release -->
    <property name="build.warnaserror" value="false" />
    <if test="${project.release.type == 'nightly'}">
        <property name="project.version.full" value="${project.version + '-nightly-' + build.date}" />
    </if>
    <if test="${project.release.type != 'nightly'}">
        <property name="project.version.full" value="${project.version + if(project.release.type == 'release', '', '-' + project.release.type)}" dynamic="true" />
    </if>
    <if test="${project.release.type == 'dev' or project.release.type == 'nightly'}">
        <property name="build.warnaserror" value="true" />
    </if>
    <!--
        specifies whether the CommonAssemblyInfo.cs file should be created.
        we do not want this for releases (whether they're beta or release) as
        this would cause the build number to be updated
    -->
    <property name="create.assemblyinfo" value="true" />

    <!-- default configuration -->
    <property name="project.config" value="debug" /> <!-- debug|release -->
    <property name="nutilities.name" value="NUtilities" />
    <property name="build.defines" value="" />
    <property name="build.number" value="${math::abs(math::floor(timespan::get-total-days(datetime::now() - datetime::parse('11/01/2009'))))}" />

    <!-- platform specific properties. These are the defaults -->
    <property name="current.build.defines" value="${build.defines}" />

    <!-- named project configurations (used by self-test and self-doc tasks) -->
    <target name="debug" description="Perform a 'debug' build">
        <property name="project.config" value="debug" />
        <property name="build.debug" value="true" />
        <property name="build.dir" value="${project::get-base-directory()}/build/${framework::get-target-framework()}.${platform::get-name()}/${project.name}-${project.version}-${project.config}" />
    </target>
    <target name="release" description="Perform a 'release' build">
        <property name="project.config" value="release" />
        <property name="build.debug" value="false" />
        <property name="build.dir" value="${project::get-base-directory()}/build/${project.name}-${project.version.full}" />
    </target>
    <!-- build tasks -->
    <target name="init" description="Initializes build properties">
        <call target="${project.config}" />
        <call target="set-framework-configuration" />
    </target>
    <target name="create-common-assemblyinfo" if="${create.assemblyinfo}">
        <!-- ensure CommonAssemblyInfo.cs is writable if it already exists -->
        <attrib file="CommonAssemblyInfo.cs" readonly="false" if="${file::exists('CommonAssemblyInfo.cs')}" />
        <!-- generate the source file holding the common assembly-level attributes -->
        <asminfo output="CommonAssemblyInfo.cs" language="CSharp">
            <imports>
                <import namespace="System" />
                <import namespace="System.Reflection" />
                <import namespace="System.Runtime.InteropServices" />
            </imports>
            <attributes>
                <attribute type="ComVisibleAttribute" value="false" />
                <attribute type="CLSCompliantAttribute" value="true" />
                <attribute type="AssemblyTitleAttribute" value="NAnt" />
                <attribute type="AssemblyDescriptionAttribute" value="A .NET Utility library" />
                <attribute type="AssemblyConfigurationAttribute" value="${project.release.type}" />
                <attribute type="AssemblyCompanyAttribute" value="http://code.google.com/p/nutilities" />
                <attribute type="AssemblyProductAttribute" value="NUtilities" />
                <attribute type="AssemblyCopyrightAttribute" value="Copyright (C) ${datetime::get-year(datetime::now())} Rob DeCarlo" />
                <attribute type="AssemblyTrademarkAttribute" value="" />
                <attribute type="AssemblyCultureAttribute" value="" />
                <attribute type="AssemblyVersionAttribute" value="${project.version}.${build.number}.0" />
                <attribute type="AssemblyInformationalVersionAttribute" value="${project.version}" />
            </attributes>
        </asminfo>
    </target>
    <target name="clean" depends="init" description="Deletes current build configuration">
        <delete dir="${build.dir}" if="${directory::exists(build.dir)}" />
    </target>
    <target name="cleanall" description="Deletes every build configuration">
        <echo message="Deleting all builds from all configurations" />
        <delete dir="build" if="${directory::exists('build')}" />
    </target>
    <target name="build" depends="init, create-common-assemblyinfo" description="Builds current configuration">
        <echo message="Build Directory is ${build.dir}" />
        <!-- ensure bin directory exists -->
        <mkdir dir="${build.dir}/bin" />
        <!-- ensure lib directory exists -->
        <mkdir dir="${build.dir}/bin/lib" />
        <!-- copy third party assemblies -->
        <copy todir="${build.dir}/bin/lib">
            <fileset basedir="lib">
                <include name="**/*" />
            </fileset>
        </copy>
        <!-- build NUtilitiles assembly -->
        <nant buildfile="Desktop/NUtilities.Desktop.build" target="build" />
    </target>
    
    <!-- Framework support targets -->
    <target name="set-framework-configuration">
            <if test="${not(target::exists('set-'+framework::get-target-framework()+'-framework-configuration'))}">
                    <fail message="The '${framework::get-target-framework()}' framework is not supported by this version of NAnt." />
            </if>
            <call target="set-${framework::get-target-framework()}-framework-configuration" />
    </target>
    <target name="set-net-1.0-framework-configuration">
            <property name="nant.settings.currentframework" value="net-1.0" />
            <property name="current.build.defines" value="${build.defines}NET,NET_1_0,ONLY_1_0" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_0" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-net-1.1-framework-configuration">
            <property name="nant.settings.currentframework" value="net-1.1" />
            <property name="current.build.defines" value="${build.defines}NET,NET_1_0,NET_1_1,ONLY_1_1" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-net-2.0-framework-configuration">
            <property name="nant.settings.currentframework" value="net-2.0" />
            <property name="current.build.defines" value="${build.defines}NET,NET_1_0,NET_1_1,NET_2_0,ONLY_2_0" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-net-3.5-framework-configuration">
            <property name="nant.settings.currentframework" value="net-3.5" />
            <property name="current.build.defines" value="${build.defines}NET,NET_1_0,NET_1_1,NET_2_0,NET_3_5,ONLY_3_5" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-netcf-1.0-framework-configuration">
            <property name="nant.settings.currentframework" value="netcf-1.0" />
            <property name="current.build.defines" value="${build.defines}NETCF,NETCF_1_0" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-mono-1.0-framework-configuration">
            <property name="nant.settings.currentframework" value="mono-1.0" />
            <property name="current.build.defines" value="${build.defines}MONO,NET_1_0,NET_1_1,ONLY_1_1" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-mono-2.0-framework-configuration">
            <property name="nant.settings.currentframework" value="mono-2.0" />
            <property name="current.build.defines" value="${build.defines}MONO,NET_1_0,NET_1_1,NET_2_0,ONLY_2_0" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-mono-3.5-framework-configuration">
            <property name="nant.settings.currentframework" value="mono-3.5" />
            <property name="current.build.defines" value="${build.defines}MONO,NET_1_0,NET_1_1,NET_2_0,NET_3_5,ONLY_3_5" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_1" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
    <target name="set-sscli-1.0-framework-configuration">
            <property name="nant.settings.currentframework" value="sscli-1.0" />
            <property name="current.build.defines" value="${build.defines}SSCLI,SSCLI_1_0" dynamic="true" />
            <property name="link.sdkdoc.version" value="SDK_v1_0" />
            <property name="link.sdkdoc.web" value="true" />
    </target>
</project>
